Notes for network traffic log analysis


The dataset is bidirectional NetFlow files. But what are bidirectional NetFlow files? Netflow is an internet protocol developed by Cisco. The goal of this protocol is to collect IP traffic information and monitor network traffic in order to have a clearer view about the network traffic flow. The main components of a NetFlow architecture are a NetFlow Exporter, a Netflow collector, and a Flow Storage. 

ZEEK or BRO is similar to netflow and generates detailed network traffic logs.


1.)  We are using log files generated by BRO Network Security Monitor as our dataset. The dataset we've choosen has about 20 million records ( about 2 GB in size) and has 22 features with a number of sub-features explained in the feature description sections that follow.

2.) Aim is to analyse the data set and come with some insight as to what kind of behaviour could be suspicious

3.) Preprocessing incluses dropping, imputing, normalizations etc.

4.) or extracting valuable statistical information, we then visualized those statistical information using the most appropriate plots (in our case, box plot was used extensively).

5.) important features are :
s.ip, dest.ip, s.port, dest.port, L4 Protocol and L3 , responding service, time_stamp, uid for each connection, SYN with no ACK, SYN with ACK , time duration b/w packets.

6.)  Some columns have a lot of missing values so we needed to impute.
float(len(df[df.proto=='tcp']))/len(df.proto)*100.0
The features uid, id.orig_h, id.resp_h, threat are removed without affecting our data's statistical integrity.

Dynamic range of these attributes. like simple auth or Http GET

if mode port == 80 and L4 tcp then fine but in majority of these sent packets if they are SYN then SYN flooding might be there.


Future Improvement:

how can port scanning data be used to a) manage client devices b) control client network activity c) analyse this and along with other paramenter will be used to quarantine malicious clients



Instead of being connected permanently to the channels, the bots regularly contact the HTTP C&C servers hosted on different sites in order to get the commands. The commands are embedded in web pages hosted on the C&C servers, and can be retrieved by the bots after requesting corresponding pages. While the HTTP bot does not remain connected to the C&C servers, it visits the corresponding sites on a regular
Holistic Model for HTTP Botnet Detection Based on DNS Traffic Analysis 7
basis, and at a pace defined by the botmaster. Such regularity can be leveraged in detecting the presence of the botnet.
Furthermore, HTTP botnet servers involve fewer web services compared to legit- imate web servers. Typical HTTP botnet C&C server will provide a command download only while legitimate sites will support a wide range of services. The request parameters in HTTP C&C tend to be relatively stable or similar (e.g. images used as command files) while a variety of resources will be requested and exchanged in legitimate web communications.
